[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Ankit <ankit.k@thepioneerfuture.com>"]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
uvicorn = {extras = ["standard"], version = "^0.28.0"}
fastapi = "0.110.1"
gunicorn = "^21.2.0"
alembic = "^1.12.1"
httpx = "^0.25.1"
sqlmodel = "^0.0.16"
pydantic-settings = "^2.2.1"
sqlalchemy-utils = "^0.41.2"
asyncpg = "^0.29.0"
taskipy = "^1.12.2"
loguru = "^0.7.2"
psycopg2-binary = "^2.9.9"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
starlette-context = "^0.3.6"
orjson = "^3.10.3"
google-auth = "^2.29.0"
bcrypt = "3.2.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
typer = "^0.12.3"
greenlet = "^3.0.3"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
mypy = "^1.8.0"
ruff = "^0.2.2"
pre-commit = "^3.6.2"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true


[tool.taskipy.tasks]
app = "uvicorn app.main:app --reload --port 9000"
seed = "python app/cli/seeders/main.py"
